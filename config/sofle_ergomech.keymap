/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3
#define FN 4

/ {
    behaviors {
        gresc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "GRAVE_ESCAPE";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;

            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_LCTL)>;
        };

        what: what {
            compatible = "zmk,behavior-mod-morph";
            label = "WHAT";
            #binding-cells = <0>;
            bindings = <&kp LSHFT>, <&mo FN>;

            mods = <(MOD_LGUI|MOD_LCTL)>;
        };

        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&sl FN>, <&kp N3>;
        };

        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LCTRL>, <&mo FN>, <&kp N3>;
        };
    };

    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   | BKSPC |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | ENTER |
            //               | CTRL| ALT  | GUI  | LOWER|  SPACE |  | SPACE | RAISE| GUI   | ALT   | CTRL |

            bindings = <
&gresc         &kp N1  &kp N2            &kp N3  &kp N4           &kp N5  &kp N6    &kp N7           &kp N8        &kp N9             &kp N0        &kp BSPC
&kp TAB        &kp Q   &kp W             &kp E   &kp R            &kp T   &kp Y     &kp U            &kp I         &kp O              &kp P         &kp BSPC
&mt LCTRL ESC  &kp A   &kp S             &kp D   &kp F            &kp G   &kp H     &kp J            &kp K         &kp L              &kp SEMI      &kp SQT
&td0           &kp Z   &kp X             &kp C   &kp V            &kp B   &kp N     &kp M            &kp COMMA     &kp PERIOD         &kp SLASH     &kp ENTER
&kp C_MUTE     &mo FN  &kp LEFT_COMMAND  &mo 1   &lt LOWER SPACE  &mo 1   &mo 2     &lt RAISE SPACE  &mo 2         &kp RIGHT_COMMAND  &kp RCTRL
                                                                          &kp C_PP  &kp C_NEXT       &kp K_VOL_UP  &kp C_PREV         &kp K_VOL_DN
            >;

            sensor-bindings = <&inc_dec_kp DOWN UP &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            label = "lower";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |   ~   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |   ~   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |     |     |      |      |      |                   |      |  _    |  +    |  {   |   }   |   |   |
            // |       |  Z  |  X  |  C   |  V   |      |        |  |       |      |       |  <    |  >   |   ?   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp TILDE  &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT  &kp CARET  &kp AMPS        &kp KP_MULTIPLY  &kp LPAR          &kp RPAR         &kp BSPC
&kp TILDE  &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT  &kp CARET  &kp AMPS        &kp KP_MULTIPLY  &kp LPAR          &kp RPAR         &kp DEL
&trans     &trans     &trans     &trans     &trans     &trans     &trans     &kp UNDERSCORE  &kp PLUS         &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp PIPE
&trans     &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &trans     &trans     &trans          &kp LT           &kp GREATER_THAN  &kp QUESTION     &trans
&trans     &trans     &trans     &trans     &mo LOWER  &trans     &trans     &mo RAISE       &trans           &trans            &trans
                                                                  &kp C_PP   &kp C_NEXT      &kp K_VOL_UP     &kp C_PREV        &kp K_VOL_DN
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            label = "raise";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1   |  2   |  3    |  4    |  5   |                |  6   |  7   |  8    |  9   |   0   |       |
            // |   `   |  1   |  2   |  3    |  4    |  5   |                |  6   |  7   |  8    |  9   |   0   |       |
            // |       |      |      |       |       |      |                |      |  -   |   =   |  [   |   ]   |   \   |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&kp GRAVE  &kp N1      &kp N2     &kp N3      &kp N4       &kp N5  &kp N6    &kp N7      &kp N8        &kp N9      &kp N0        &trans
&kp GRAVE  &kp N1      &kp N2     &kp N3      &kp N4       &kp N5  &kp N6    &kp N7      &kp N8        &kp N9      &kp N0        &trans
&trans     &trans      &trans     &trans      &trans       &trans  &trans    &kp MINUS   &kp EQUAL     &kp LBKT    &kp RBKT      &kp BACKSLASH
&trans     &kp K_UNDO  &kp K_CUT  &kp K_COPY  &kp K_PASTE  &trans  &trans    &trans      &trans        &trans      &trans        &trans
&trans     &trans      &trans     &trans      &mo LOWER    &trans  &trans    &mo RAISE   &trans        &trans      &trans
                                                                   &kp C_PP  &kp C_NEXT  &kp K_VOL_UP  &kp C_PREV  &kp K_VOL_DN
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // |        |  F1     |  F2     |  F3     |  F4     |  F5     |                  |  F6  |  F7  |  F8   |  F9  |  F10  |  F11  |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |  <-  | DOWN |  UP   |   -> |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      | HOME | PGDN |  PGUP |  END |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            label = "adjust";
            bindings = <
&trans             &kp F1           &kp F2           &kp F3           &kp F4           &kp F5           &kp F6           &kp F7      &kp F8        &kp F9      &kp F10       &kp F11
&ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF  &none            &none       &none         &none       &none         &none
&none              &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &none            &kp LEFT         &kp DOWN    &kp UP        &kp RIGHT   &none         &none
&none              &none            &none            &none            &none            &none            &rgb_ug RGB_TOG  &kp HOME    &kp PG_DN     &kp PG_UP   &kp END       &none
&none              &none            &none            &none            &none            &none            &none            &none       &none         &none       &none
                                                                                                        &kp C_PP         &kp C_NEXT  &kp K_VOL_UP  &kp C_PREV  &kp K_VOL_DN
            >;
        };

        fn_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            label = "fn";
            bindings = <
&bt BT_CLR       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4     &none          &none          &none          &none          &none          &kp LG(LC(Q))
&out OUT_USB     &out OUT_BLE  &out OUT_TOG  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF  &none          &none          &none          &none          &none          &none
&rgb_ug RGB_TOG  &bl BL_TOG    &trans        &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_EFR  &kp LG(LBRC)   &kp LG(MINUS)  &kp LG(EQUAL)  &kp LG(RBRC)   &none          &none
&none            &kp HASH      &none         &none            &none            &none            &bl BL_TOG     &kp LG(LBKT)   &kp LG(RBKT)   &kp LG(GRAVE)  &none          &none
&none            &none         &none         &kp BSPC         &kp ENTER        &none            &none          &none          &none          &none          &none
                                                                                                &kp LG(GRAVE)  &kp LG(RBRC)   &kp LG(EQUAL)  &kp LG(LBRC)   &kp LG(MINUS)
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
